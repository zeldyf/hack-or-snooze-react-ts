{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const BASE_URL = \"https://hack-or-snooze-v3.herokuapp.com\";\nexport const fetchStories = createAsyncThunk(`stories/fetchStories`, async () => {\n  const response = await fetch(BASE_URL + \"stories\").then(response => response.json());\n  return response.stories;\n});\n\n// async function fetchStories(): Promise<[]> {\n//   const response = await fetch(`${BASE_URL}/stories`);\n//   const body: { stories: [] } = await response.json();\n//   if (body && body.stories && Array.isArray(body.stories)) {\n//     return body.stories;\n//   } else {\n//     throw new Error(\"Invalid response format\");\n//   }\n// }\n\nexport default fetchStories;","map":{"version":3,"names":["createAsyncThunk","BASE_URL","fetchStories","response","fetch","then","json","stories"],"sources":["/Users/zeldyfriedman/Documents/Redux/hack-or-snooze-react-ts/src/fetchStories.tsx"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const BASE_URL = \"https://hack-or-snooze-v3.herokuapp.com\";\n\nexport const fetchStories = createAsyncThunk(\n  `stories/fetchStories`,\n  async () => {\n    const response = await fetch(BASE_URL + \"stories\").then((response) =>\n      response.json()\n    );\n    return response.stories\n  }\n);\n\n// async function fetchStories(): Promise<[]> {\n//   const response = await fetch(`${BASE_URL}/stories`);\n//   const body: { stories: [] } = await response.json();\n//   if (body && body.stories && Array.isArray(body.stories)) {\n//     return body.stories;\n//   } else {\n//     throw new Error(\"Invalid response format\");\n//   }\n// }\n\nexport default fetchStories;\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AAEnD,OAAO,MAAMC,QAAQ,GAAG,yCAAyC;AAEjE,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CACzC,sBAAqB,EACtB,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,GAAG,SAAS,CAAC,CAACI,IAAI,CAAEF,QAAQ,IAC/DA,QAAQ,CAACG,IAAI,CAAC,CAChB,CAAC;EACD,OAAOH,QAAQ,CAACI,OAAO;AACzB,CACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeL,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}