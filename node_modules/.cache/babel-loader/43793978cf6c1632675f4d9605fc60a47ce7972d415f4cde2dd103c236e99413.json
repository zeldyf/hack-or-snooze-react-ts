{"ast":null,"code":"var _jsxFileName = \"/Users/zeldyfriedman/Documents/React/Hack or Snooze React and TS/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport AccountForms from \"./AccountForms\";\nimport fetchStories from \"./fetchStories\";\nimport StoryList from \"./StoryList\";\nimport StoryForm from \"./StoryForm\";\nimport { useUser } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stories, setStories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAccountForms, setShowAccountForms] = useState(false);\n  const [showStoryForm, setShowStoryForm] = useState(false);\n  const {\n    isLoggedIn,\n    user\n  } = useUser();\n  const toggleForms = ({\n    formType\n  }) => {\n    if (formType === \"account\") {\n      setShowAccountForms(!showAccountForms);\n    }\n    if (formType === \"story\") {\n      setShowStoryForm(!showStoryForm);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const storiesData = await fetchStories();\n        setStories(storiesData.map(story => {\n          return {\n            story: {\n              author: story.author,\n              createdAt: story.createdAt,\n              storyId: story.storyId,\n              title: story.title,\n              updatedAt: story.updatedAt,\n              url: story.url,\n              username: story.username\n            }\n          };\n        }));\n      } catch (error) {\n        console.error(\"Error fetching stories.\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      loggedIn: isLoggedIn,\n      onLoginClick: () => toggleForms({\n        formType: \"account\"\n      }),\n      onSubmitClick: () => toggleForms({\n        formType: \"story\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), showAccountForms && /*#__PURE__*/_jsxDEV(AccountForms, {\n      onLoginSubmit: () => toggleForms({\n        formType: \"account\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), showStoryForm && /*#__PURE__*/_jsxDEV(StoryForm, {\n      onStorySubmit: () => toggleForms({\n        formType: \"story\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"stories-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(StoryList, {\n        stories: stories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Rof8G1Oc2/f6qSGj+FkT4jhECZQ=\", false, function () {\n  return [useUser];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Navbar","AccountForms","fetchStories","StoryList","StoryForm","useUser","jsxDEV","_jsxDEV","App","_s","stories","setStories","loading","setLoading","showAccountForms","setShowAccountForms","showStoryForm","setShowStoryForm","isLoggedIn","user","toggleForms","formType","fetchData","storiesData","map","story","author","createdAt","storyId","title","updatedAt","url","username","error","console","className","children","loggedIn","onLoginClick","onSubmitClick","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSubmit","onStorySubmit","_c","$RefreshReg$"],"sources":["/Users/zeldyfriedman/Documents/React/Hack or Snooze React and TS/my-app/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport AccountForms from \"./AccountForms\";\nimport fetchStories from \"./fetchStories\";\nimport StoryList from \"./StoryList\";\nimport StoryForm from \"./StoryForm\";\nimport Favorites from \"./Favorites\";\nimport { StoryObj, useUser } from \"./UserContext\";\n\ninterface toggleFormsProps {\n  formType: \"account\" | \"story\";\n}\n\nfunction App() {\n  const [stories, setStories] = useState<StoryObj[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showAccountForms, setShowAccountForms] = useState(false);\n  const [showStoryForm, setShowStoryForm] = useState(false);\n  const { isLoggedIn, user } = useUser();\n\n  const toggleForms = ({ formType }: toggleFormsProps) => {\n    if (formType === \"account\") {\n      setShowAccountForms(!showAccountForms);\n    }\n    if (formType === \"story\") {\n      setShowStoryForm(!showStoryForm);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const storiesData = await fetchStories();\n        setStories(\n          storiesData.map(\n            (story: {\n              author: string;\n              createdAt: string;\n              storyId: string;\n              title: string;\n              updatedAt: string;\n              url: string;\n              username: string;\n            }) => {\n              return {\n                story: {\n                  author: story.author,\n                  createdAt: story.createdAt,\n                  storyId: story.storyId,\n                  title: story.title,\n                  updatedAt: story.updatedAt,\n                  url: story.url,\n                  username: story.username,\n                },\n              };\n            }\n          )\n        );\n      } catch (error) {\n        console.error(\"Error fetching stories.\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    \n        <div className=\"app\">\n          <Navbar\n            loggedIn={isLoggedIn}\n            onLoginClick={() => toggleForms({ formType: \"account\" })}\n            onSubmitClick={() => toggleForms({ formType: \"story\" })}\n          />\n          {showAccountForms && (\n            <AccountForms\n            onLoginSubmit={() => toggleForms({ formType: \"account\" })}\n            />\n          )}\n          {showStoryForm && (\n            <StoryForm\n            onStorySubmit={() => toggleForms({ formType: \"story\" })}\n            />\n            )}\n          {/* <Route path=\"/stories\" element={<StoryList stories={stories} />} /> */}\n          {/* <Route\n            path=\"/favorites\"\n            element={<Favorites favorites={user.user.favorites} />}\n          /> */}\n          {/* <Route path=\"/mystories\" /> */}\n          <section className=\"stories-list\">\n            {loading ? <div>Loading...</div> : <StoryList stories={stories} />}\n          </section>\n        </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}