{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport loginUser from \"../fetchUser\";\nconst initialState = {\n  createdAt: \"\",\n  favorites: [],\n  name: \"\",\n  stories: [],\n  updatedAt: \"\",\n  username: \"\",\n  status: \"idle\"\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    autoLogin: (state, action) => {\n      const savedUser = localStorage.getItem(\"username\");\n      const savedToken = localStorage.getItem(\"token\");\n      loginUser;\n    },\n    signup: (state, action) => {},\n    logout: state => {\n      state.createdAt = \"\";\n      state.favorites = [];\n      state.name = \"\";\n      state.stories = [];\n      state.updatedAt = \"\";\n      state.username = \"\";\n      state.status = \"idle\";\n      localStorage.clear();\n    },\n    update: (state, action) => {}\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.status = \"loading\";\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      console.log(action.payload);\n      state.username = action.payload.user.username;\n      state.updatedAt = action.payload.user.updatedAt;\n      state.createdAt = action.payload.user.createdAt;\n      state.favorites = action.payload.user.favorites;\n      state.name = action.payload.user.name;\n      state.stories = action.payload.user.stories;\n      state.status = \"succeeded\";\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('username', action.payload.user.username);\n    });\n  }\n});\nexport const {\n  autoLogin,\n  signup,\n  logout\n} = userSlice.actions;\nexport const userReducer = userSlice.reducer;","map":{"version":3,"names":["createSlice","loginUser","initialState","createdAt","favorites","name","stories","updatedAt","username","status","userSlice","reducers","autoLogin","state","action","savedUser","localStorage","getItem","savedToken","signup","logout","clear","update","extraReducers","builder","addCase","pending","fulfilled","console","log","payload","user","setItem","token","actions","userReducer","reducer"],"sources":["/Users/zeldyfriedman/Documents/Redux/hack-or-snooze-react-ts/src/store/userSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport loginUser from \"../fetchUser\";\n\nconst initialState = {\n    createdAt: \"\",\n    favorites: [],\n    name: \"\",\n    stories: [],\n    updatedAt: \"\",\n    username: \"\",\n    status: \"idle\",\n};\n\nexport const userSlice = createSlice({\n    name: \"user\",\n    initialState,\n    reducers: {\n        autoLogin: (state, action) => {\n            const savedUser = localStorage.getItem(\"username\");\n            const savedToken = localStorage.getItem(\"token\");\n\n            loginUser\n        },\n        signup: (state, action) => { },\n        logout: (state) => {\n            state.createdAt = \"\";\n            state.favorites = [];\n            state.name = \"\";\n            state.stories = [];\n            state.updatedAt = \"\";\n            state.username = \"\";\n            state.status = \"idle\";\n\n            localStorage.clear();\n        },\n        update: (state, action) => { },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(loginUser.pending, (state) => {\n                state.status = \"loading\"\n            })\n            .addCase(loginUser.fulfilled, (state, action) => {\n                console.log(action.payload)\n                state.username = action.payload.user.username;\n                state.updatedAt = action.payload.user.updatedAt;\n                state.createdAt = action.payload.user.createdAt;\n                state.favorites = action.payload.user.favorites;\n                state.name = action.payload.user.name;\n                state.stories = action.payload.user.stories;\n                state.status = \"succeeded\"\n\n                localStorage.setItem('token', action.payload.token);\n                localStorage.setItem('username', action.payload.user.username);\n            });\n    },\n});\n\nexport const { autoLogin, signup, logout } = userSlice.actions;\nexport const userReducer = userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,cAAc;AAEpC,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,EAAE;EACbC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGV,WAAW,CAAC;EACjCK,IAAI,EAAE,MAAM;EACZH,YAAY;EACZS,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAClD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAEhDhB,SAAS;IACb,CAAC;IACDkB,MAAM,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK,CAAE,CAAC;IAC9BM,MAAM,EAAGP,KAAK,IAAK;MACfA,KAAK,CAACV,SAAS,GAAG,EAAE;MACpBU,KAAK,CAACT,SAAS,GAAG,EAAE;MACpBS,KAAK,CAACR,IAAI,GAAG,EAAE;MACfQ,KAAK,CAACP,OAAO,GAAG,EAAE;MAClBO,KAAK,CAACN,SAAS,GAAG,EAAE;MACpBM,KAAK,CAACL,QAAQ,GAAG,EAAE;MACnBK,KAAK,CAACJ,MAAM,GAAG,MAAM;MAErBO,YAAY,CAACK,KAAK,CAAC,CAAC;IACxB,CAAC;IACDC,MAAM,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK,CAAE;EACjC,CAAC;EACDS,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACxB,SAAS,CAACyB,OAAO,EAAGb,KAAK,IAAK;MACnCA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDgB,OAAO,CAACxB,SAAS,CAAC0B,SAAS,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC7Cc,OAAO,CAACC,GAAG,CAACf,MAAM,CAACgB,OAAO,CAAC;MAC3BjB,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACgB,OAAO,CAACC,IAAI,CAACvB,QAAQ;MAC7CK,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACgB,OAAO,CAACC,IAAI,CAACxB,SAAS;MAC/CM,KAAK,CAACV,SAAS,GAAGW,MAAM,CAACgB,OAAO,CAACC,IAAI,CAAC5B,SAAS;MAC/CU,KAAK,CAACT,SAAS,GAAGU,MAAM,CAACgB,OAAO,CAACC,IAAI,CAAC3B,SAAS;MAC/CS,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACgB,OAAO,CAACC,IAAI,CAAC1B,IAAI;MACrCQ,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACgB,OAAO,CAACC,IAAI,CAACzB,OAAO;MAC3CO,KAAK,CAACJ,MAAM,GAAG,WAAW;MAE1BO,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAElB,MAAM,CAACgB,OAAO,CAACG,KAAK,CAAC;MACnDjB,YAAY,CAACgB,OAAO,CAAC,UAAU,EAAElB,MAAM,CAACgB,OAAO,CAACC,IAAI,CAACvB,QAAQ,CAAC;IAClE,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,SAAS;EAAEO,MAAM;EAAEC;AAAO,CAAC,GAAGV,SAAS,CAACwB,OAAO;AAC9D,OAAO,MAAMC,WAAW,GAAGzB,SAAS,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}