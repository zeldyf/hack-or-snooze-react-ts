{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const BASE_URL = \"https://hack-or-snooze-v3.herokuapp.com\";\nexport const fetchStories = createAsyncThunk(`stories/fetchStories`, async () => {\n  const response = await fetch(BASE_URL + \"stories\").then(response => response.json());\n  return response.stories;\n});\n\n// async function fetchStories(): Promise<[]> {\n//   const response = await fetch(`${BASE_URL}/stories`);\n//   const body: { stories: [] } = await response.json();\n//   if (body && body.stories && Array.isArray(body.stories)) {\n//     return body.stories;\n//   } else {\n//     throw new Error(\"Invalid response format\");\n//   }\n// }\n\nexport const fetchCharactersFromAPI = createAsyncThunk(\"characters/fetchCharacters\", async searchTerm => {\n  const response = await fetch(ENDPOINT + searchTerm.toLowerCase()).then(response => response.json());\n  return response.results;\n});\nexport default fetchStories;","map":{"version":3,"names":["createAsyncThunk","BASE_URL","fetchStories","response","fetch","then","json","stories","fetchCharactersFromAPI","searchTerm","ENDPOINT","toLowerCase","results"],"sources":["/Users/zeldyfriedman/Documents/Redux/hack-or-snooze-react-ts/src/fetchStories.tsx"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const BASE_URL = \"https://hack-or-snooze-v3.herokuapp.com\";\n\nexport const fetchStories = createAsyncThunk(\n  `stories/fetchStories`,\n  async () => {\n    const response = await fetch(BASE_URL + \"stories\").then((response) =>\n      response.json()\n    );\n    return response.stories\n  }\n);\n\n// async function fetchStories(): Promise<[]> {\n//   const response = await fetch(`${BASE_URL}/stories`);\n//   const body: { stories: [] } = await response.json();\n//   if (body && body.stories && Array.isArray(body.stories)) {\n//     return body.stories;\n//   } else {\n//     throw new Error(\"Invalid response format\");\n//   }\n// }\n\nexport const fetchCharactersFromAPI = createAsyncThunk(\n  \"characters/fetchCharacters\",\n  async (searchTerm) => {\n    const response = await fetch(ENDPOINT + searchTerm.toLowerCase()).then(\n      (response) => response.json()\n    );\n    return response.results;\n  }\n);\n\nexport default fetchStories;\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AAEnD,OAAO,MAAMC,QAAQ,GAAG,yCAAyC;AAEjE,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CACzC,sBAAqB,EACtB,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,GAAG,SAAS,CAAC,CAACI,IAAI,CAAEF,QAAQ,IAC/DA,QAAQ,CAACG,IAAI,CAAC,CAChB,CAAC;EACD,OAAOH,QAAQ,CAACI,OAAO;AACzB,CACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,sBAAsB,GAAGR,gBAAgB,CACpD,4BAA4B,EAC5B,MAAOS,UAAU,IAAK;EACpB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACM,QAAQ,GAAGD,UAAU,CAACE,WAAW,CAAC,CAAC,CAAC,CAACN,IAAI,CACnEF,QAAQ,IAAKA,QAAQ,CAACG,IAAI,CAAC,CAC9B,CAAC;EACD,OAAOH,QAAQ,CAACS,OAAO;AACzB,CACF,CAAC;AAED,eAAeV,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}