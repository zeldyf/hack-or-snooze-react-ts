{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport fetchStories from \"../fetchStories\";\nexport const storiesSlice = createSlice({\n  name: 'stories',\n  initialState: {\n    data: [],\n    loading: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchStories.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.loading = false;\n    });\n  }\n});\nexport const storySlice = createSlice({\n  name: 'story',\n  initialState: {\n    data: {\n      author: \"\",\n      createdAt: \"\",\n      storyId: \"\",\n      title: \"\",\n      updatedAt: \"\",\n      url: \"\",\n      username: \"\"\n    },\n    isFavorite: false\n  },\n  reducers: {}\n});\nexport const userStoriesSlice = createSlice({\n  name: 'userStories',\n  initialState: {\n    data: [],\n    loading: false\n  },\n  reducers: {}\n  // extraReducers: (builder) => {\n  //     builder\n  //         .addCase(newStory.fulfilled, (state, action) => {\n  //             console.log(action.payload)\n  //             state.data.push(action.payload)\n  //         })\n\n  // }\n});\n\nexport const storiesReducer = storiesSlice.reducer;","map":{"version":3,"names":["createSlice","fetchStories","storiesSlice","name","initialState","data","loading","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","storySlice","author","createdAt","storyId","title","updatedAt","url","username","isFavorite","userStoriesSlice","storiesReducer","reducer"],"sources":["/Users/zeldyfriedman/Documents/Redux/hack-or-snooze-react-ts/src/store/storiesSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport fetchStories, { newStory } from \"../fetchStories\";\nimport { StoryObj } from \"./types\"\n\nexport const storiesSlice = createSlice({\n    name: 'stories',\n    initialState: {\n        data: [] as StoryObj[],\n        loading: false\n    },\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchStories.fulfilled, (state, action) => {\n                state.data = action.payload;\n                state.loading = false;\n            })\n    }\n})\n\nexport const storySlice = createSlice({\n    name: 'story',\n    initialState: {\n        data: {\n            author: \"\",\n            createdAt: \"\",\n            storyId: \"\",\n            title: \"\",\n            updatedAt: \"\",\n            url: \"\",\n            username: \"\",\n        } as StoryObj,\n        isFavorite: false,\n    },\n    reducers: {}\n})\n\nexport const userStoriesSlice = createSlice({\n    name: 'userStories',\n    initialState: {\n        data: [] as StoryObj[],\n        loading: false\n    },\n    reducers: {},\n    // extraReducers: (builder) => {\n    //     builder\n    //         .addCase(newStory.fulfilled, (state, action) => {\n    //             console.log(action.payload)\n    //             state.data.push(action.payload)\n    //         })\n\n    // }\n})\n\nexport const storiesReducer = storiesSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAoB,iBAAiB;AAGxD,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC;EACpCG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAgB;IACtBC,OAAO,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE,CACV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACT,YAAY,CAACU,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACN,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMS,UAAU,GAAGf,WAAW,CAAC;EAClCG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,IAAI,EAAE;MACFW,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,GAAG,EAAE,EAAE;MACPC,QAAQ,EAAE;IACd,CAAa;IACbC,UAAU,EAAE;EAChB,CAAC;EACDhB,QAAQ,EAAE,CAAC;AACf,CAAC,CAAC;AAEF,OAAO,MAAMiB,gBAAgB,GAAGxB,WAAW,CAAC;EACxCG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAgB;IACtBC,OAAO,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE,CAAC;EACX;EACA;EACA;EACA;EACA;EACA;;EAEA;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAMkB,cAAc,GAAGvB,YAAY,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}