{"ast":null,"code":"var _jsxFileName = \"/Users/zeldyfriedman/Documents/React/Hack or Snooze React and TS/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport AccountForms from \"./AccountForms\";\nimport fetchStories from \"./fetchStories\";\nimport StoryList from \"./StoryList\";\nimport StoryForm from \"./StoryForm\";\nimport Favorites from \"./Favorites\";\nimport { useUser } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stories, setStories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAccountForms, setShowAccountForms] = useState(false);\n  const [showStoryForm, setShowStoryForm] = useState(false);\n  const {\n    isLoggedIn,\n    user\n  } = useUser();\n  const toggleForms = ({\n    formType\n  }) => {\n    if (formType === \"account\") {\n      setShowAccountForms(!showAccountForms);\n    }\n    if (formType === \"story\") {\n      setShowStoryForm(!showStoryForm);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const storiesData = await fetchStories();\n        setStories(storiesData.map(story => {\n          return {\n            story: {\n              author: story.author,\n              createdAt: story.createdAt,\n              storyId: story.storyId,\n              title: story.title,\n              updatedAt: story.updatedAt,\n              url: story.url,\n              username: story.username\n            }\n          };\n        }));\n      } catch (error) {\n        console.error(\"Error fetching stories.\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        loggedIn: isLoggedIn,\n        onLoginClick: () => toggleForms({\n          formType: \"account\"\n        }),\n        onSubmitClick: () => toggleForms({\n          formType: \"story\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), showAccountForms && /*#__PURE__*/_jsxDEV(AccountForms, {\n        onLoginSubmit: () => toggleForms({\n          formType: \"account\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), showStoryForm && /*#__PURE__*/_jsxDEV(StoryForm, {\n        onStorySubmit: () => toggleForms({\n          formType: \"story\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/stories\",\n          element: /*#__PURE__*/_jsxDEV(StoryList, {\n            stories: stories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), \"path=\\\"/favorites\\\" element=\", /*#__PURE__*/_jsxDEV(Favorites, {\n          favorites: user.user.favorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 22\n        }, this), \"/> */}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"stories-list\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(StoryList, {\n          stories: stories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rof8G1Oc2/f6qSGj+FkT4jhECZQ=\", false, function () {\n  return [useUser];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","BrowserRouter","Routes","Route","Navbar","AccountForms","fetchStories","StoryList","StoryForm","Favorites","useUser","jsxDEV","_jsxDEV","App","_s","stories","setStories","loading","setLoading","showAccountForms","setShowAccountForms","showStoryForm","setShowStoryForm","isLoggedIn","user","toggleForms","formType","fetchData","storiesData","map","story","author","createdAt","storyId","title","updatedAt","url","username","error","console","children","className","loggedIn","onLoginClick","onSubmitClick","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSubmit","onStorySubmit","path","element","favorites","_c","$RefreshReg$"],"sources":["/Users/zeldyfriedman/Documents/React/Hack or Snooze React and TS/my-app/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport AccountForms from \"./AccountForms\";\nimport fetchStories from \"./fetchStories\";\nimport StoryList from \"./StoryList\";\nimport StoryForm from \"./StoryForm\";\nimport Favorites from \"./Favorites\";\nimport { StoryObj, useUser } from \"./UserContext\";\n\ninterface toggleFormsProps {\n  formType: \"account\" | \"story\";\n}\n\nfunction App() {\n  const [stories, setStories] = useState<StoryObj[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showAccountForms, setShowAccountForms] = useState(false);\n  const [showStoryForm, setShowStoryForm] = useState(false);\n  const { isLoggedIn, user } = useUser();\n\n  const toggleForms = ({ formType }: toggleFormsProps) => {\n    if (formType === \"account\") {\n      setShowAccountForms(!showAccountForms);\n    }\n    if (formType === \"story\") {\n      setShowStoryForm(!showStoryForm);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const storiesData = await fetchStories();\n        setStories(\n          storiesData.map(\n            (story: {\n              author: string;\n              createdAt: string;\n              storyId: string;\n              title: string;\n              updatedAt: string;\n              url: string;\n              username: string;\n            }) => {\n              return {\n                story: {\n                  author: story.author,\n                  createdAt: story.createdAt,\n                  storyId: story.storyId,\n                  title: story.title,\n                  updatedAt: story.updatedAt,\n                  url: story.url,\n                  username: story.username,\n                },\n              };\n            }\n          )\n        );\n      } catch (error) {\n        console.error(\"Error fetching stories.\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <BrowserRouter>\n        <div className=\"app\">\n          <Navbar\n            loggedIn={isLoggedIn}\n            onLoginClick={() => toggleForms({ formType: \"account\" })}\n            onSubmitClick={() => toggleForms({ formType: \"story\" })}\n            />\n          {showAccountForms && (\n            <AccountForms\n            onLoginSubmit={() => toggleForms({ formType: \"account\" })}\n            />\n          )}\n          {showStoryForm && (\n            <StoryForm\n            onStorySubmit={() => toggleForms({ formType: \"story\" })}\n            />\n          )}\n            <Routes>\n          <Route path=\"/stories\" element={<StoryList stories={stories} />} />\n          {/* {/* <Route */}\n            path=\"/favorites\"\n            element={<Favorites favorites={user.user.favorites} />}\n          /> */}\n          {/* <Route path=\"/mystories\" /> */}\n      </Routes>\n          <section className=\"stories-list\">\n            {loading ? <div>Loading...</div> : <StoryList stories={stories} />}\n          </section>\n        </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}