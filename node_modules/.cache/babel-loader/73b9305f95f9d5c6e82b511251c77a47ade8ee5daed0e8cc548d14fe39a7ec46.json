{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { autoLogin, signup, loginUser } from \"../fetchUser\";\nconst initialState = {\n  createdAt: \"\",\n  favorites: [],\n  name: \"\",\n  stories: [],\n  updatedAt: \"\",\n  username: \"\",\n  status: \"idle\"\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logout: state => {\n      state.createdAt = \"\";\n      state.favorites = [];\n      state.name = \"\";\n      state.stories = [];\n      state.updatedAt = \"\";\n      state.username = \"\";\n      state.status = \"idle\";\n      localStorage.clear();\n    },\n    update: (state, action) => {}\n  },\n  extraReducers: builder => {\n    builder.addCase(signup.pending, state => {\n      state.status = \"loading\";\n    }).addCase(signup.fulfilled, (state, action) => {\n      state.username = action.payload.user.username;\n      state.updatedAt = action.payload.user.updatedAt;\n      state.createdAt = action.payload.user.createdAt;\n      state.favorites = action.payload.user.favorites;\n      state.name = action.payload.user.name;\n      state.stories = action.payload.user.stories;\n      state.status = \"succeeded\";\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('username', action.payload.user.username);\n    }).addCase(signup.rejected, state => {\n      state.status = \"loading\";\n    }).addCase(loginUser.pending, state => {\n      state.status = \"loading\";\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.username = action.payload.user.username;\n      state.updatedAt = action.payload.user.updatedAt;\n      state.createdAt = action.payload.user.createdAt;\n      state.favorites = action.payload.user.favorites;\n      state.name = action.payload.user.name;\n      state.stories = action.payload.user.stories;\n      state.status = \"succeeded\";\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('username', action.payload.user.username);\n    }).addCase(autoLogin.pending, state => {\n      state.status = 'loading';\n    }).addCase(autoLogin.fulfilled, (state, action) => {\n      state.username = action.payload.user.username;\n      state.updatedAt = action.payload.user.updatedAt;\n      state.createdAt = action.payload.user.createdAt;\n      state.favorites = action.payload.user.favorites;\n      state.name = action.payload.user.name;\n      state.stories = action.payload.user.stories;\n      state.status = \"succeeded\";\n    });\n  }\n});\nexport const {\n  logout\n} = userSlice.actions;\nexport const userReducer = userSlice.reducer;","map":{"version":3,"names":["createSlice","autoLogin","signup","loginUser","initialState","createdAt","favorites","name","stories","updatedAt","username","status","userSlice","reducers","logout","state","localStorage","clear","update","action","extraReducers","builder","addCase","pending","fulfilled","payload","user","setItem","token","rejected","actions","userReducer","reducer"],"sources":["/Users/zeldyfriedman/Documents/Redux/hack-or-snooze-react-ts/src/store/userSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { autoLogin, signup, loginUser } from \"../fetchUser\";\n\nconst initialState = {\n    createdAt: \"\",\n    favorites: [],\n    name: \"\",\n    stories: [],\n    updatedAt: \"\",\n    username: \"\",\n    status: \"idle\",\n};\n\nexport const userSlice = createSlice({\n    name: \"user\",\n    initialState,\n    reducers: {\n        logout: (state) => {\n            state.createdAt = \"\";\n            state.favorites = [];\n            state.name = \"\";\n            state.stories = [];\n            state.updatedAt = \"\";\n            state.username = \"\";\n            state.status = \"idle\";\n\n            localStorage.clear();\n        },\n        update: (state, action) => { },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(signup.pending, (state) => {\n                state.status = \"loading\"\n            })\n            .addCase(signup.fulfilled, (state, action) => {\n                state.username = action.payload.user.username;\n                state.updatedAt = action.payload.user.updatedAt;\n                state.createdAt = action.payload.user.createdAt;\n                state.favorites = action.payload.user.favorites;\n                state.name = action.payload.user.name;\n                state.stories = action.payload.user.stories;\n                state.status = \"succeeded\"\n\n                localStorage.setItem('token', action.payload.token);\n                localStorage.setItem('username', action.payload.user.username);\n            })\n            .addCase(signup.rejected, (state) => {\n                state.status = \"loading\"\n            })\n            .addCase(loginUser.pending, (state) => {\n                state.status = \"loading\"\n            })\n            .addCase(loginUser.fulfilled, (state, action) => {\n                state.username = action.payload.user.username;\n                state.updatedAt = action.payload.user.updatedAt;\n                state.createdAt = action.payload.user.createdAt;\n                state.favorites = action.payload.user.favorites;\n                state.name = action.payload.user.name;\n                state.stories = action.payload.user.stories;\n                state.status = \"succeeded\"\n\n                localStorage.setItem('token', action.payload.token);\n                localStorage.setItem('username', action.payload.user.username);\n            })\n            .addCase(autoLogin.pending, (state) => {\n                state.status = 'loading'\n            })\n            .addCase(autoLogin.fulfilled, (state, action) => {\n                state.username = action.payload.user.username;\n                state.updatedAt = action.payload.user.updatedAt;\n                state.createdAt = action.payload.user.createdAt;\n                state.favorites = action.payload.user.favorites;\n                state.name = action.payload.user.name;\n                state.stories = action.payload.user.stories;\n                state.status = \"succeeded\"\n            });\n    },\n});\n\nexport const { logout } = userSlice.actions;\nexport const userReducer = userSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}